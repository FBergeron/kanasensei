/*
 * Copyright (C) 1999  Frédéric Bergeron (fbergeron@users.sourceforge.net)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.fbergeron.util;

import java.awt.*;
import java.util.*;

/**
 * Simple frame that displays information about an application.
 */
public class FrameAbout extends Frame
{

	/**
	 * Constructor for FrameAbout.
	 * 
	 * @param appTitle Title of the application
	 * @param version Version of the application
	 * @param author Author of the application
	 * @param email Email of the author
	 * @param date Date of creation/modification of the application
	 * @param locale Locale of the FrameAbout
	 */
	public FrameAbout(String appTitle, String version, String author, String email, String date, Locale locale)
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(new BorderLayout(0,0));
		setVisible(false);
		setSize(260,230);
		setBackground(new Color(16777215));
		panelTitle = new java.awt.Panel();
		panelTitle.setLayout(new BorderLayout(0,0));
		panelTitle.setBounds(0,0,260,59);
		add("North", panelTitle);
		labelTitle = new java.awt.Label("",Label.CENTER);
		labelTitle.setBounds(0,0,260,36);
		labelTitle.setFont(new Font("Dialog", Font.PLAIN, 24));
		panelTitle.add("Center", labelTitle);
		labelVersion = new java.awt.Label("",Label.CENTER);
		labelVersion.setBounds(0,36,260,23);
		panelTitle.add("South", labelVersion);
		panelPicture = new java.awt.Panel();
		panelPicture.setLayout(new BorderLayout(0,0));
		panelPicture.setBounds(0,59,260,125);
		add("Center", panelPicture);
		panelAuthor = new java.awt.Panel();
		panelAuthor.setLayout(new BorderLayout(0,0));
		panelAuthor.setBounds(0,184,260,46);
		add("South", panelAuthor);
		labelDate = new java.awt.Label("",Label.RIGHT);
		labelDate.setBounds(0,23,260,23);
		panelAuthor.add("South", labelDate);
		labelAuthor = new java.awt.Label("",Label.RIGHT);
		labelAuthor.setBounds(0,0,260,23);
		panelAuthor.add("North", labelAuthor);
		labelEmail = new java.awt.Label("text",Label.RIGHT);
		labelEmail.setBounds(0,0,100,40);
		panelAuthor.add("Center", labelEmail);
		//}}

        resBundle = ResourceBundle.getBundle( "com.fbergeron.util.FrameAboutRess", locale ); 

        labelTitle.setText( appTitle );
        labelVersion.setText( (String)resBundle.getString( "Version" ) + " " + version );
        labelAuthor.setText( (String)resBundle.getString( "By" ) +" : " + author );
        labelEmail.setText( email );
        labelDate.setText( "© " + date );

		//{{INIT_MENUS
		//}}

		//{{REGISTER_LISTENERS
		//}}

		setTitle( resBundle.getString( "About" ) + " " + appTitle );
		addWindowListener( new WindowManager( this, WindowManager.HIDE_ON_CLOSE ) );
	}

    /**
     * Shows or hides the component depending on the boolean flag b.
     * @param b  if true, show the component; otherwise, hide the component.
     * @see java.awt.Component#isVisible
     */
    public void setVisible(boolean b)
	{
	    Dimension scrSize = getToolkit().getScreenSize();
	    Dimension size = getSize();
		if(b)
		{
			setLocation( (scrSize.width - size.width) / 2, (scrSize.height - size.height) / 2 );
		}
		super.setVisible(b);
	}

	public void addNotify()
	{
	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();

		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(getInsets().left + getInsets().right + d.width, getInsets().top + getInsets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(getInsets().left, getInsets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	//{{DECLARE_CONTROLS
	java.awt.Panel panelTitle;
	java.awt.Label labelTitle;
	java.awt.Label labelVersion;
	java.awt.Panel panelPicture;
	java.awt.Panel panelAuthor;
	java.awt.Label labelDate;
	java.awt.Label labelAuthor;
	java.awt.Label labelEmail;
	//}}

	//{{DECLARE_MENUS
	//}}
	
	static ResourceBundle resBundle;
}
